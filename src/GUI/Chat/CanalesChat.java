/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Chat;

import Bean.UsuarioLogueado;
import GUI.Principal.Principal;
import Peer2Peer.Point.TestRemoteP2P;
import de.root1.simon.Lookup;
import de.root1.simon.Simon;
import de.root1.simon.exceptions.EstablishConnectionFailed;
import de.root1.simon.exceptions.LookupFailedException;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USUARIO
 */
public class CanalesChat extends javax.swing.JFrame {

    /**
     * Creates new form CanalesChat
     */
    private Principal papa;
    final static String caracteres = "ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss";
    Chat chatActual ;
    public CanalesChat() {
        initComponents();
        jTextPane1.setContentType("text/html"); 

        new Thread() {
            @Override
            public void run() {
                while (true) {
                    if (papa == null) {
                        System.err.println("oie ZHy");

                        continue;
                    }
                    try {
                        sleep(2000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(CanalesChat.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    ActualizarChats();
                   
                    if(chatActual!=null){
                        for (int i = 0; i < jTCanales.getRowCount(); i++) {
                        Chat  de = (Chat)(jTCanales.getValueAt(i, 1));
                            System.err.println("haya algo " +de .getId()+"  "+ chatActual.getId());
                            if (chatActual.getId()==de.getId()){
                                System.err.println("dentro aqui");
                            chatActual=de; 
                            break;
                            }
                        }
                        ActualizarPane(chatActual);
                    }else{
                        System.err.println("nunca selecciono actual");
                    }
                
                    
                }
                
            }

        }.start();

      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTCanales = new javax.swing.JTable();
        jLTitulo = new javax.swing.JLabel();
        jTMensaje = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jBCrear = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTCanales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1 ", "TODOS"},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "CANAL DES"
            }
        ));
        jTCanales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTCanalesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTCanales);

        jLTitulo.setText("CHAT  CANALES");

        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Ver");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jBCrear.setText("Crear");
        jBCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCrearActionPerformed(evt);
            }
        });

        jTextPane1.setEditable(false);
        jTextPane1.setContentType("text/html");
        jScrollPane3.setViewportView(jTextPane1);
        jTextPane1.getAccessibleContext().setAccessibleDescription("text/html");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(28, 28, 28)
                        .addComponent(jBCrear)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(323, 323, 323)
                .addComponent(jLTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLTitulo)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 38, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jBCrear)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jTMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTCanalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTCanalesMouseClicked
        // TODO add your handling code here:
          if (jTCanales.getSelectedRows().length <= 0) {
            return;
        }
        Chat can = (Chat) jTCanales.getValueAt(jTCanales.getSelectedRow(), 1);
        chatActual=can;
        ActualizarPane(can);
    }//GEN-LAST:event_jTCanalesMouseClicked

    private void jBCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCrearActionPerformed
        CrearChat crear = new CrearChat();
        crear.setPapa(papa);
        crear.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jBCrearActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (jTCanales.getSelectedRows().length <= 0) {
            return;
        }
        Chat can = (Chat) jTCanales.getValueAt(jTCanales.getSelectedRow(), 1);
        chatActual=can;
        ActualizarPane(can);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            Mensaje men = new Mensaje();
            men.setUsuName(papa.getUsuario().getAmigoLogueoName());
            men.setMensaje(jTMensaje.getText());
            UsuarioLogueado amiguito =chatActual.getHoster();
            String nombreServer = "rmi://" + amiguito.getAmigoIp() + ":" + amiguito.getAmigoPuerto() + "/server";
            System.err.println(nombreServer);
            Lookup nameLookup = Simon.createNameLookup(amiguito.getAmigoIp(), Integer.parseInt(amiguito.getAmigoPuerto()));
            
            TestRemoteP2P testRemote = (TestRemoteP2P) nameLookup.lookup(nombreServer);
            testRemote.EscribirMensajeHost(chatActual.getId(), men);
            jTMensaje.setText("");
        } catch (UnknownHostException ex) {
            Logger.getLogger(CanalesChat.class.getName()).log(Level.SEVERE, null, ex);
        } catch (LookupFailedException ex) {
            Logger.getLogger(CanalesChat.class.getName()).log(Level.SEVERE, null, ex);
        } catch (EstablishConnectionFailed ex) {
            Logger.getLogger(CanalesChat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /***
         * @param args the command line arguments
         */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CanalesChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CanalesChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CanalesChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CanalesChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CanalesChat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCrear;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLTitulo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTCanales;
    private javax.swing.JTextField jTMensaje;
    private javax.swing.JEditorPane jTextPane1;
    // End of variables declaration//GEN-END:variables

    public Principal getPapa() {
        return papa;
    }

    public void setPapa(Principal papa) {
        this.papa = papa;
    }

    public void ActualizarChats() {
        String[] cabecera = {"usuario", "Descripcion"};
        DefaultTableModel a = new DefaultTableModel(cabecera, 0);
        for (UsuarioLogueado amiguito : papa.getUsuariosConectados()) {
            try {
                String nombreServer = "rmi://" + amiguito.getAmigoIp() + ":" + amiguito.getAmigoPuerto() + "/server";
                Lookup nameLookup = Simon.createNameLookup(amiguito.getAmigoIp(), Integer.parseInt(amiguito.getAmigoPuerto()));

                TestRemoteP2P testRemote = (TestRemoteP2P) nameLookup.lookup(nombreServer);
                ArrayList<Chat> arr = testRemote.TellMeYourChats();
                for (Chat chat : arr) {
                    Object[] obj = new Object[2];
                    obj[0] = chat.getHoster().getAmigoLogueoName();
                    obj[1] = chat;
                    a.addRow(obj);

                }
                jTCanales.setModel(a);
            } catch (UnknownHostException ex) {
                Logger.getLogger(CanalesChat.class.getName()).log(Level.SEVERE, null, ex);
            } catch (LookupFailedException ex) {
                Logger.getLogger(CanalesChat.class.getName()).log(Level.SEVERE, null, ex);
            } catch (EstablishConnectionFailed ex) {
                Logger.getLogger(CanalesChat.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
private void ActualizarPane(Chat can ){
   String entrada = "<head><base href=\"file:d:/\"></head>";
        for (Mensaje men : can.getMensajes()) {
            if (men.getUsuName().equals(papa.getUsuario().getAmigoLogueoName())) {
                String blancos = "";
                for (int i = men.getUsuName().length(); i < caracteres.length() - 1; i++) {
                    blancos += "&nbsp";
                }
                entrada += "<b>" + blancos +" "+  men.getUsuName() + "</b><br>";
                int tam = men.getMensaje().length() / caracteres.length();
                tam++;
                int tamLin = men.getMensaje().length() / tam;
                for (int i = 0; i < tam; i++) {
                    blancos = "";
                    String linea = men.getMensaje().substring(i * tamLin, (1 + i) * tamLin);
                    for (int i1 = linea.length(); i1 < caracteres.length() - 1; i1++) {
                        blancos += "&nbsp";
                    }
                    entrada += "<p>" + blancos + " "+ linea + "</p><br>";
                }
            } else {
                entrada += "<b>" + men.getUsuName() + "</b><br>";
                int tam = men.getMensaje().length() / caracteres.length();
                tam++;
                int tamLin = men.getMensaje().length() / tam;
                for (int i = 0; i < tam; i++) {
                    String linea = men.getMensaje().substring(i * tamLin, (1 + i) * tamLin);

                    entrada += "<p>" + linea + "</p><br>";
                }

            }}
                jTextPane1.setContentType("text/html"); 

        jTextPane1.setText(entrada);

}
}
