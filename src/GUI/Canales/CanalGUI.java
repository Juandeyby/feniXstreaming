/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Canales;

import Bean.Amigo;
import GUI.Principal.Principal;
import Peer2Peer.Bean.Video;
import Peer2Peer.Point.TestRemoteP2P;
import Ruteador.Servidor.TestRemote;
import Utilitarios.Esteticos;
import de.root1.simon.Lookup;
import de.root1.simon.Simon;
import de.root1.simon.exceptions.EstablishConnectionFailed;
import de.root1.simon.exceptions.LookupFailedException;
import static java.lang.Thread.sleep;
import java.net.UnknownHostException;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author USUARIO
 */
public class CanalGUI extends javax.swing.JFrame {

    private Principal papa;

    public CanalGUI() {

        initComponents();
        iniMio();
        panelVideo1.iniMio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListVideos = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jBVer = new javax.swing.JButton();
        imagen = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        panelVideo1 = new GUI.TransmitirVideo.PanelVideo();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(253, 255, 254));

        jListVideos.setForeground(new java.awt.Color(62, 64, 149));
        jListVideos.setToolTipText("");
        jScrollPane1.setViewportView(jListVideos);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(62, 64, 149));
        jLabel2.setText("Archivos Compartido");

        jButton1.setBackground(new java.awt.Color(153, 255, 255));
        jButton1.setForeground(new java.awt.Color(62, 64, 149));
        jButton1.setText("descargar ");

        jBVer.setBackground(new java.awt.Color(153, 255, 255));
        jBVer.setForeground(new java.awt.Color(62, 64, 149));
        jBVer.setText("Ver");
        jBVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerActionPerformed(evt);
            }
        });

        imagen.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(imagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBVer, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jBVer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(imagen, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Media Compartida");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(panelVideo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(231, 231, 231)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelVideo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * *
     *
     * @param evt
     * @see se llama a los metodos ver video seleccionado
     */
    private void jBVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVerActionPerformed
        // TODO add your handling code here:
        String mrl = verVideoSeleccionado();
        transmitirVideo(mrl);
    }//GEN-LAST:event_jBVerActionPerformed
    /**
     * *
     * @see iniMio personalisado de la interfaz , en el se crea un nuevo hilo la
     * tabla de videos
     */
    public void iniMio() {
        new Thread() {
            @Override
            public void run() {
                while (true) {
                    if (papa != null) {
                        llenarVideos();
                        System.err.println("oie ZHy");
                    }

                    if (papa == null) {
                        System.err.println("ala mierda ");
                    }
                    try {
                        sleep(5000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(CanalGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        }.start();
        Esteticos.ponerImagenIcono(this, imagen);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CanalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CanalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CanalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CanalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CanalGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel imagen;
    private javax.swing.JButton jBVer;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jListVideos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private GUI.TransmitirVideo.PanelVideo panelVideo1;
    // End of variables declaration//GEN-END:variables

    public void estado(int a) {
        if (a == 1) {
            this.setVisible(true);

        }

    }

    public Principal getPapa() {
        return papa;
    }

    /**
     * *
     *
     * @param papa
     * @return void
     *
     */
    public void setPapa(Principal papa) {
        this.papa = papa;
    }

    /**
     * *
     * llena la caja de los videos disponibles en este momento
     */
    private void llenarVideos() {

        DefaultListModel model = new DefaultListModel();

        ArrayList<Amigo> usuariosConectados = papa.getUsuariosConectados();
        int a = 0;
        for (Amigo amiguito : usuariosConectados) {
        

                if (!amiguito.equals((Amigo) (papa.getUsuario()))) {
                    System.out.println("mis amiguitos estan ahi " + amiguito.getAmigoLogueoName());
                    Video videito = QueEstasTransmitiendo(amiguito);
                    if (videito != null && videito.getMrlLocal() != null) {
                        model.add(a, videito);
                        a++;
                    }
                }
           

        }

        /*
         Borrando de jListNoEnviado
         */
        jListVideos.setModel(model);
    }

    /**
     * *
     *
     * @param amiguito amigo al cual le estamos preguntando informacion
     * @return Video que el servidor del amiguito dice q esta trasmitiendo
     * @throws RemoteException
     * @throws NotBoundException
     */
    private Video QueEstasTransmitiendo(Amigo amiguito) {
        try {
            long a = System.currentTimeMillis();
            String nombreServer = "rmi://" + amiguito.getAmigoIp() + ":" + amiguito.getAmigoPuerto() + "/server";
            Lookup nameLookup = Simon.createNameLookup(amiguito.getAmigoIp(),Integer.parseInt( amiguito.getAmigoPuerto()));
            
            
            TestRemoteP2P testRemote = (TestRemoteP2P)nameLookup.lookup(nombreServer);
            Video video = testRemote.OECTmDimeTuVideo();
            a = System.currentTimeMillis() - a;
            if (video != null) {
                video.setLatencia(a);
            }
            nameLookup.release(testRemote);
            
            return video;
        } catch (LookupFailedException ex) {
            Logger.getLogger(CanalGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (EstablishConnectionFailed ex) {
            Logger.getLogger(CanalGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnknownHostException ex) {
            Logger.getLogger(CanalGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    /**
     * *
     *
     * @param videito
     * @return String sacando el mrl del video para este caso tendra la forma
     * "rtp://@192.168.2.45:3333"
     * @throws RemoteException
     * @throws RemoteException
     * @throws NotBoundException
     * @see tener en cuenta q no verifica puerto disponivle ni ip dentro de red
     */
    public String sacarMrlVido(Video videito) {
        
        try {
            Amigo amiguito = videito.getUsuarioDueño();
            String nombreServer = "rmi://" + amiguito.getAmigoIp() + ":" + amiguito.getAmigoPuerto() + "/server";
            System.out.println(nombreServer);
            System.out.println(videito.getMrlLocal() + "    " + videito.getUsuarioDueño());
            Lookup nameLookup = Simon.createNameLookup(amiguito.getAmigoIp(),Integer.parseInt( amiguito.getAmigoPuerto()));
            
            
            TestRemoteP2P testRemote = (TestRemoteP2P) nameLookup.lookup(nombreServer);

            String mrl = testRemote.TransmitemeTuVideo(papa.getUsuario().getAmigoIp(), Integer.parseInt(papa.getUsuario().getAmigoPuerto()) + 1);

            return mrl;
        } catch (UnknownHostException ex) {
            Logger.getLogger(CanalGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (LookupFailedException ex) {
            Logger.getLogger(CanalGUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (EstablishConnectionFailed ex) {
            Logger.getLogger(CanalGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
       return "";
    }

    /**
     * *
     * @see estamos ordenando los datos del boton ver
     * @return String retorna el mrl con el cual se esta trasmitiendo el video
     * seleccionado
     */
    private String verVideoSeleccionado() {
        int a = jListVideos.getSelectedIndex();

        if (a < 0) {
            return "";
        }
        System.err.println("eres mas manco de lo que crei");
        Video videito = (Video) (jListVideos.getModel().getElementAt(a));
        String mrl = "";

        mrl = sacarMrlVido(videito);

        System.out.println(mrl);
        panelVideo1.iniMio();
        panelVideo1.reproducir(mrl);
        System.out.println("pase EEE ");
        return mrl;

    }

    /**
     * *
     * @see cambia el video del servidor a un valor diferente de nulo para q sea
     * buscado
     * @param mrl fuente del video puede ser local o reenviar transmision
     */
    private void transmitirVideo(String mrl) {

        Video videoito = new Video(papa.getUsuario(), mrl);
        papa.getServerPeticiones().setVidoeoUnico(videoito);
        JOptionPane.showMessageDialog(null, " ala bien estas trabsmitiendo");

    }
}
